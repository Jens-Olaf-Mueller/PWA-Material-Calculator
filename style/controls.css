:root {
    --buttonSize: 2.5rem;
}
/* Styling the navigation elements */
nav.nav-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 1rem;
    width: 100%;
}

.img-button {
    height: var(--buttonSize);
    width: var(--buttonSize);
    border-radius: 50%;
    box-shadow: 5px 5px 8px var(--shadowDark), -5px -5px 8px var(--shadowLight);
    padding: 0.4rem;
}

.img-button img {
    height: 100%;
}

.img-button[disabled] svg {
    fill: var(--bg1);
}

#imgSettings.img-button {
    margin-left: auto;
}

#imgCloseSettings, #imgCalcSettings, #imgCloseCalcSettings {
    position: absolute;
    right: 1rem;
    top: 1rem;
}

#imgClose, #imgCloseCalc, #imgCloseHelp {
    position: absolute;
    right: 1rem;
    bottom: 1rem;
}

/* Styling all input controls */
.control {
    position: relative;
    display: flex;
    align-items: center;
    width:100%;
    height: 2.5rem;
    border-radius:8px;
    background: none;
    box-shadow: inset 4px 4px 8px var(--shadowDark), inset -4px -4px 8px var(--shadowLight);
    color:var(--textColor);
    font-size:1rem;
}

.control#divArea * {
    color: var(--accentColor);
    font-weight: bold;
}

#inpArea:not([disabled], :focus):placeholder-shown ~ label {
    color: var(--requiredColor);
}

.control svg,
.control img {
    display: none;
    position: absolute;
    right: 0.75rem;
    height: 1.5rem;
    cursor: pointer;
    z-index: 2;
}

.unit-changer {
    z-index: 101;
}

.control span.unit {
    position: absolute;
    right: 2.5rem;
}

.control span.dropdown-arrow {
    position: absolute;
    right: 0.5rem;
    top: 38%;
    height: 1rem;
    width: 1rem;
    border-top: 9px solid var(--accentColor);
    border-left: 9px solid transparent;
    border-right: 9px solid transparent;
}

.control input:not([type="checkbox"], [type="range"]) {
    position: absolute;
    top: 2px;
    left: 32px;
    border: 1px silver;
    border: none;
    background: none;
    height:100%;
    width: calc(100% - 36px);
    outline: none;
    color: var(--textColor);
    font-size: 1rem;
    transition: all 150ms ease-in;
    z-index: 1; /* must be in front of label! */
}

.control input[type="checkbox"] {
    display: none;
    width: 1.5rem;
    height: 1.5rem;
    opacity: 0;
    visibility: hidden;
    z-index: 100;
}

.control:has(input[type="range"]) {
    height: 1.25rem;
    box-shadow: none;
}

.control:has(input[type="range"]) label{
    min-width: 8rem;
    width: auto;
    left: 0.25rem;
}

.control input[type="range"] {
    position: absolute;
    right: 33%;
    height: 1.25rem; 
    width: 7rem;   
    appearance: none;
    background-color: transparent;
    box-shadow: inset 4px 4px 8px var(--shadowDark), inset -4px -4px 8px var(--shadowLight);
    border-radius: 12px;
}

.control input[type="range"].switch {
    position: absolute;
    right: 0.25rem;
    width: 2.5rem;
}

/***** Chrome, Safari, Opera, and Edge Chromium *****/
.control input[type="range"]::-webkit-slider-thumb {
     /* Override default look: */
    -webkit-appearance: none;
    appearance: none;
    background-color: var(--accentColor);
    height: 1.15rem;
    width: 1.15rem;
    border-radius: 50%;
    box-shadow: 4px 4px 8px var(--shadowDark), -4px -4px 8px var(--shadowLight);
}

.control input[type="range"].switch:not([checked])::-webkit-slider-thumb {
    background-color: var(--disabledColor);
}

.control:has(input[type="checkbox"]){
    box-shadow: none;
    height: 1.5rem;
}

.control:has(input[type="checkbox"], input[type="range"], select) label {
    top: unset;
    color: var(--textColor) ;
}

.control input:required ~ label {
    color: var(--requiredColor);
}

.control input:focus ~ label,
.control input:not(:placeholder-shown, :focus, [type="checkbox"]) ~ label {
    top: -50%;
    left: 16px;
    font-size: 0.75rem;
    filter: brightness(1.2);
    color:var(--textColor);
}

.control input:focus ~ svg,
.control input:focus ~ img  {
    display: block;
}

.control label {
    position: absolute;
    top: 25%;
    left: 1.75rem;
    font-size: 1rem;
    transition: top 200ms ease-in-out,
                left 200ms ease-in-out,
                font-size 200ms ease-in;
}


.control input:disabled,
.control input:disabled ~ label,
.control input:disabled ~ span {
    color: var(--disabledColor);
}

.control:has(input:disabled, select) {
    box-shadow: 4px 4px 8px var(--shadowDark), -4px -4px 8px var(--shadowLight);
}

.control select#selTrowel {
    width: 100%;
    background-color: transparent;
    text-align: right;
    padding-right: 2.5rem;
    color: var(--textColor);
    border: none;
    outline: none;
    appearance: none;
    z-index: 1;
    /* fix a Safari bug: text-align does not work on select element! */
    direction: rtl;
}

.control:has(select:active) {
    box-shadow: inset 4px 4px 8px var(--shadowDark), inset -4px -4px 8px var(--shadowLight);
}
